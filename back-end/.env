# ============================================
# ENVIRONMENT VARIABLES
# ============================================
# This file stores sensitive configuration data
# NEVER commit this file to GitHub! (add to .gitignore)

# -------- DATABASE CONNECTION --------
# MongoDB connection string
# For local MongoDB: mongodb://localhost:27017/booksy
# For MongoDB Atlas (cloud): mongodb+srv://username:password@cluster.mongodb.net/booksy
MONGODB_URI=mongodb+srv://amjedvnml_db_user:booksydbsetup@booksydb.9u2oz7m.mongodb.net/booksy?retryWrites=true&w=majority&appName=booksydb

# -------- SERVER CONFIGURATION --------
# Port number for the server to listen on
PORT=5000

# -------- AUTHENTICATION --------
# Secret key for JWT (JSON Web Tokens)
# This should be a long, random string in production
# Used to sign and verify authentication tokens
JWT_SECRET=your_super_secret_jwt_key_change_this_in_production_12345

# Token expiration time
JWT_EXPIRE=7d

# -------- ENVIRONMENT --------
# Current environment: development, production, or test
NODE_ENV=development

# ============================================
# EXPLANATION OF EACH VARIABLE:
# ============================================
#
# MONGODB_URI:
# - Connection string to MongoDB database
# - Format: mongodb://[host]:[port]/[database_name]
# - localhost:27017 = MongoDB running on your computer
# - booksy = name of your database
#
# PORT:
# - Which network port the server listens on
# - Like a door number: http://localhost:5000
# - Common values: 3000, 5000, 8000, 8080
#
# JWT_SECRET:
# - Secret key for creating authentication tokens
# - MUST be random and complex in production
# - Used to encrypt user sessions
# - If leaked, attackers can fake user identities!
#
# JWT_EXPIRE:
# - How long a login token stays valid
# - 7d = 7 days
# - Other examples: 1h, 30m, 24h
#
# NODE_ENV:
# - Tells app which mode it's running in
# - development: detailed errors, no caching
# - production: optimized, security hardened
# ============================================
